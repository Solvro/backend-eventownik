{
  "openapi": "3.0.0",
  "info": {
    "title": "Eventownik backend",
    "version": "0.5.0",
    "description": "Eventownik backend API documentation"
  },
  "components": {
    "responses": {
      "Forbidden": {
        "description": "Access token is missing or invalid"
      },
      "Accepted": {
        "description": "The request was accepted"
      },
      "Created": {
        "description": "The resource has been created"
      },
      "NotFound": {
        "description": "The resource has been created"
      },
      "NotAcceptable": {
        "description": "The resource has been created"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Any": {
        "description": "Any JSON object not defined as schema"
      },
      "Admin": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 669
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com",
            "format": "email"
          },
          "type": {
            "$ref": "#/components/schemas/\"organizer\"",
            "example": "organizer",
            "enum": ["organizer", "superadmin"]
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission",
              "example": null
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event",
              "example": null
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "Admin (Model)"
      },
      "Attribute": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 238
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "eventId": {
            "type": "number",
            "example": 823
          },
          "options": {
            "$ref": "#/components/schemas/object",
            "example": null
          },
          "type": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "rootBlockId": {
            "type": "number",
            "example": 862
          },
          "showInList": {
            "type": "boolean",
            "example": true
          },
          "showInForm": {
            "type": "boolean",
            "example": true
          },
          "event!": {
            "$ref": "#/components/schemas/Event",
            "example": null
          },
          "rootBlock!": {
            "$ref": "#/components/schemas/Block",
            "example": null
          },
          "forms!": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form",
              "example": null
            }
          },
          "participantAttributes!": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantAttribute",
              "example": null
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "Attribute (Model)"
      },
      "Block": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 916
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet"
          },
          "parentId": {
            "type": "number",
            "example": 804
          },
          "parent": {
            "$ref": "#/components/schemas/Block",
            "example": null
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Block",
              "example": null
            }
          },
          "capacity": {
            "type": "number",
            "example": 650
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "Block (Model)"
      },
      "Email": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 97
          },
          "eventId": {
            "type": "number",
            "example": 807
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "content": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "trigger": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "triggerValue": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "event": {
            "$ref": "#/components/schemas/Event",
            "example": null
          },
          "participantEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantEmail",
              "example": null
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant",
              "example": null
            }
          },
          "$extras": {
            "$ref": "#/components/schemas/",
            "example": null
          }
        },
        "description": "Email (Model)"
      },
      "Event": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 772
          },
          "organizerId": {
            "type": "number",
            "example": 617
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "startDate": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "firstFormId": {
            "type": "number",
            "example": 213
          },
          "lat": {
            "type": "number",
            "example": 41.705
          },
          "long": {
            "type": "number",
            "example": -87.475
          },
          "primaryColor": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "organizer": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "participantsCount": {
            "type": "number",
            "example": 674
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "admins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Admin",
              "example": null
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission",
              "example": null
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant",
              "example": null
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email",
              "example": null
            }
          }
        },
        "description": "Event (Model)"
      },
      "Form": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 853
          },
          "eventId": {
            "type": "number",
            "example": 399
          },
          "isOpen": {
            "type": "boolean",
            "example": true
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "startDate": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "event": {
            "$ref": "#/components/schemas/Event",
            "example": null
          }
        },
        "description": "Form (Model)"
      },
      "Participant": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 852
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com",
            "format": "email"
          },
          "eventId": {
            "type": "number",
            "example": 150
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "event": {
            "$ref": "#/components/schemas/Event",
            "example": null
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email",
              "example": null
            }
          },
          "participantAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantAttribute",
              "example": null
            }
          },
          "participantEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantEmail",
              "example": null
            }
          }
        },
        "description": "Participant (Model)"
      },
      "ParticipantAttribute": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 762
          },
          "participantId": {
            "type": "number",
            "example": 742
          },
          "attributeId": {
            "type": "number",
            "example": 977
          },
          "value": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "participant": {
            "$ref": "#/components/schemas/Participant",
            "example": null
          },
          "attribute": {
            "$ref": "#/components/schemas/Attribute",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "ParticipantAttribute (Model)"
      },
      "ParticipantEmail": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 263
          },
          "participantId": {
            "type": "number",
            "example": 444
          },
          "emailId": {
            "type": "number",
            "example": 736
          },
          "sendAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "sendBy": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "status": {
            "$ref": "#/components/schemas/\"pending\"",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "participant": {
            "$ref": "#/components/schemas/Participant",
            "example": null
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com",
            "format": "email"
          }
        },
        "description": "ParticipantEmail (Model)"
      },
      "Permission": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 377
          },
          "action": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "subject": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "admins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Admin",
              "example": null
            }
          }
        },
        "description": "Permission (Model)"
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 100,
            "nullable": false
          },
          "page": {
            "type": "number",
            "example": 2,
            "nullable": false
          },
          "perPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "currentPage": {
            "type": "number",
            "example": 3,
            "nullable": false
          },
          "lastPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "firstPage": {
            "type": "number",
            "example": 1,
            "nullable": false
          },
          "lastPageUrl": {
            "type": "string",
            "example": "/?page=10",
            "nullable": false
          },
          "firstPageUrl": {
            "type": "string",
            "example": "/?page=1",
            "nullable": false
          },
          "nextPageUrl": {
            "type": "string",
            "example": "/?page=6",
            "nullable": false
          },
          "previousPageUrl": {
            "type": "string",
            "example": "/?page=5",
            "nullable": false
          }
        }
      },
      "createAdminValidator": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "type": {
            "type": "number",
            "example": 190,
            "choices": ["organizer", "superadmin"]
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "permissionId": {
                  "type": "number",
                  "example": 502,
                  "required": true
                },
                "eventId": {
                  "type": "number",
                  "example": 74,
                  "required": true
                }
              }
            }
          }
        },
        "example": {
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum",
          "password": "Lorem Ipsum",
          "email": "Lorem Ipsum",
          "type": 190,
          "active": true,
          "permissions": [
            {
              "permissionId": 502,
              "eventId": 74
            }
          ]
        },
        "description": "createAdminValidator (Validator)"
      },
      "updateAdminValidator": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "type": {
            "type": "number",
            "example": 936,
            "choices": ["organizer", "superadmin"]
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "permissionId": {
                  "type": "number",
                  "example": 829,
                  "required": true
                },
                "eventId": {
                  "type": "number",
                  "example": 995,
                  "required": true
                }
              }
            }
          }
        },
        "example": {
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum",
          "password": "Lorem Ipsum",
          "email": "Lorem Ipsum",
          "type": 936,
          "active": true,
          "permissions": [
            {
              "permissionId": 829,
              "eventId": 995
            }
          ]
        },
        "description": "updateAdminValidator (Validator)"
      },
      "loginValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "rememberMe": {
            "type": "boolean",
            "example": true
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "password": "Lorem Ipsum",
          "rememberMe": true
        },
        "description": "loginValidator (Validator)"
      },
      "registerAdminValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "minLength": 8
          },
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "password": "Lorem Ipsum",
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum"
        },
        "description": "registerAdminValidator (Validator)"
      },
      "createBlockValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "parentId": {
            "type": "number",
            "example": 51,
            "required": true
          },
          "capacity": {
            "type": "number",
            "example": 1,
            "minimum": 1,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "description": "Lorem Ipsum",
          "parentId": 51,
          "capacity": 1
        },
        "description": "createBlockValidator (Validator)"
      },
      "updateBlockValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "parentId": {
            "type": "number",
            "example": 647,
            "required": true
          },
          "capacity": {
            "type": "number",
            "example": 1,
            "minimum": 1,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "description": "Lorem Ipsum",
          "parentId": 647,
          "capacity": 1
        },
        "description": "updateBlockValidator (Validator)"
      },
      "emailsStoreValidator": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "number",
            "example": 738,
            "required": true
          },
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "content": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "trigger": {
            "type": "number",
            "example": 781,
            "choices": [
              "participant_registered",
              "participant_deleted",
              "form_filled",
              "attribute_changed"
            ],
            "required": true
          },
          "triggerValue": {
            "type": "string",
            "example": "Lorem Ipsum"
          }
        },
        "example": {
          "eventId": 738,
          "name": "Lorem Ipsum",
          "content": "Lorem Ipsum",
          "trigger": 781,
          "triggerValue": "Lorem Ipsum"
        },
        "description": "emailsStoreValidator (Validator)"
      },
      "emailsUpdateValidator": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "number",
            "example": 938
          },
          "name": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "content": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "trigger": {
            "type": "number",
            "example": 992,
            "choices": [
              "participant_registered",
              "form_filled",
              "attribute_changed"
            ]
          },
          "triggerValue": {
            "type": "string",
            "example": "Lorem Ipsum"
          }
        },
        "example": {
          "eventId": 938,
          "name": "Lorem Ipsum",
          "content": "Lorem Ipsum",
          "trigger": 992,
          "triggerValue": "Lorem Ipsum"
        },
        "description": "emailsUpdateValidator (Validator)"
      },
      "createEventValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "organizer": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "startDate": {
            "type": "number",
            "example": 589,
            "required": true
          },
          "endDate": {
            "type": "number",
            "example": 82,
            "required": true
          },
          "firstFormId": {
            "type": "number",
            "example": 792
          },
          "lat": {
            "type": "number",
            "example": 478
          },
          "long": {
            "type": "number",
            "example": 339
          },
          "primaryColor": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "participantsCount": {
            "type": "number",
            "example": 418
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "description": "Lorem Ipsum",
          "organizer": "Lorem Ipsum",
          "slug": "Lorem Ipsum",
          "startDate": 589,
          "endDate": 82,
          "firstFormId": 792,
          "lat": 478,
          "long": 339,
          "primaryColor": "Lorem Ipsum",
          "participantsCount": 418
        },
        "description": "createEventValidator (Validator)"
      },
      "updateEventValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "slug": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "startDate": {
            "type": "number",
            "example": 430
          },
          "endDate": {
            "type": "number",
            "example": 328
          },
          "lat": {
            "type": "number",
            "example": 712
          },
          "long": {
            "type": "number",
            "example": 3
          },
          "primaryColor": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "participantsCount": {
            "type": "number",
            "example": 623
          },
          "organizer": {
            "type": "string",
            "example": "Lorem Ipsum"
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "description": "Lorem Ipsum",
          "slug": "Lorem Ipsum",
          "startDate": 430,
          "endDate": 328,
          "lat": 712,
          "long": 3,
          "primaryColor": "Lorem Ipsum",
          "participantsCount": 623,
          "organizer": "Lorem Ipsum"
        },
        "description": "updateEventValidator (Validator)"
      },
      "createFormValidator": {
        "type": "object",
        "properties": {
          "isOpen": {
            "type": "boolean",
            "example": true,
            "required": true
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "startDate": {
            "type": "number",
            "example": 259,
            "required": true
          },
          "endDate": {
            "type": "number",
            "example": 795
          },
          "attributeIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 731
            }
          }
        },
        "example": {
          "isOpen": true,
          "description": "Lorem Ipsum",
          "name": "Lorem Ipsum",
          "startDate": 259,
          "endDate": 795,
          "attributeIds": [731]
        },
        "description": "createFormValidator (Validator)"
      },
      "updateFormValidator": {
        "type": "object",
        "properties": {
          "isOpen": {
            "type": "boolean",
            "example": true
          },
          "description": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "name": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "startDate": {
            "type": "number",
            "example": 782
          },
          "endDate": {
            "type": "number",
            "example": 545
          },
          "attributeIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 207
            }
          }
        },
        "example": {
          "isOpen": true,
          "description": "Lorem Ipsum",
          "name": "Lorem Ipsum",
          "startDate": 782,
          "endDate": 545,
          "attributeIds": [207]
        },
        "description": "updateFormValidator (Validator)"
      },
      "addOrganizerValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "permissionsIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 750
            },
            "required": true
          },
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum"
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "permissionsIds": [750],
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum",
          "password": "Lorem Ipsum"
        },
        "description": "addOrganizerValidator (Validator)"
      },
      "updateOrganizerPermissionsValidator": {
        "type": "object",
        "properties": {
          "permissionsIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 949
            },
            "required": true
          }
        },
        "example": {
          "permissionsIds": [949]
        },
        "description": "updateOrganizerPermissionsValidator (Validator)"
      },
      "participantsStoreValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "eventId": {
            "type": "number",
            "example": 793
          },
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "participantAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attributeId": {
                  "type": "number",
                  "example": 314,
                  "required": true
                },
                "value": {
                  "type": "number",
                  "example": 642,
                  "required": true
                }
              }
            },
            "properties": {
              "items": {
                "value": {
                  "type": "string",
                  "example": "Lorem Ipsum"
                }
              }
            }
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "eventId": 793,
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum",
          "participantAttributes": [
            {
              "attributeId": 314,
              "value": "Lorem Ipsum"
            }
          ]
        },
        "description": "participantsStoreValidator (Validator)"
      },
      "participantsUpdateValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "eventId": {
            "type": "number",
            "example": 183
          },
          "firstName": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "lastName": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "participantAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 545,
                  "required": true
                },
                "value": {
                  "type": "number",
                  "example": 66,
                  "required": true
                }
              }
            },
            "properties": {
              "items": {
                "value": {
                  "type": "string",
                  "example": "Lorem Ipsum"
                }
              }
            }
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "eventId": 183,
          "firstName": "Lorem Ipsum",
          "lastName": "Lorem Ipsum",
          "participantAttributes": [
            {
              "id": 545,
              "value": "Lorem Ipsum"
            }
          ]
        },
        "description": "participantsUpdateValidator (Validator)"
      },
      "participantAttributesStoreValidator": {
        "type": "object",
        "properties": {
          "participantAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attributeId": {
                  "type": "number",
                  "example": 62,
                  "required": true
                },
                "value": {
                  "type": "number",
                  "example": 488,
                  "required": true
                }
              }
            },
            "properties": {
              "items": {
                "value": {
                  "type": "string",
                  "example": "Lorem Ipsum"
                }
              }
            }
          }
        },
        "example": {
          "participantAttributes": [
            {
              "attributeId": 62,
              "value": "Lorem Ipsum"
            }
          ]
        },
        "description": "participantAttributesStoreValidator (Validator)"
      },
      "participantAttributesUpdateValidator": {
        "type": "object",
        "properties": {
          "participantAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 20,
                  "required": true
                },
                "value": {
                  "type": "number",
                  "example": 557,
                  "required": true
                }
              }
            },
            "properties": {
              "items": {
                "value": {
                  "type": "string",
                  "example": "Lorem Ipsum"
                }
              }
            }
          }
        },
        "example": {
          "participantAttributes": [
            {
              "id": 20,
              "value": "Lorem Ipsum"
            }
          ]
        },
        "description": "participantAttributesUpdateValidator (Validator)"
      },
      "createPermissionValidator": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "subject": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          }
        },
        "example": {
          "action": "Lorem Ipsum",
          "subject": "Lorem Ipsum"
        },
        "description": "createPermissionValidator (Validator)"
      },
      "updatePermissionValidator": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "subject": {
            "type": "string",
            "example": "Lorem Ipsum"
          }
        },
        "example": {
          "action": "Lorem Ipsum",
          "subject": "Lorem Ipsum"
        },
        "description": "updatePermissionValidator (Validator)"
      }
    }
  },
  "paths": {
    "/api/v1/admins": {
      "get": {
        "summary": "Get a list of admins (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/admins_controller.ts_ - **index**",
        "operationId": "getAdmins",
        "parameters": [],
        "tags": ["ADMINS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                },
                "example": [
                  {
                    "id": 669,
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@example.com",
                    "type": {},
                    "active": true,
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Creates an admin\n\n _app/controllers/admins_controller.ts_ - **store**",
        "operationId": "createAdmin",
        "parameters": [],
        "tags": ["ADMINS"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAdminValidator"
              },
              "example": {
                "firstName": "Lorem Ipsum",
                "lastName": "Lorem Ipsum",
                "password": "Lorem Ipsum",
                "email": "Lorem Ipsum",
                "type": 190,
                "active": true,
                "permissions": [
                  {
                    "permissionId": 502,
                    "eventId": 74
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/admins/{id}": {
      "get": {
        "summary": "Get a single instance of admins (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/admins_controller.ts_ - **show**",
        "operationId": "getAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ADMINS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                },
                "example": {
                  "id": 669,
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "johndoe@example.com",
                  "type": {},
                  "active": true,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "{ message: \"Row not found\", \"name\": \"Exception\", status: 404},"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update admins (update)",
        "description": "Updates admin details\n\n _app/controllers/admins_controller.ts_ - **update**",
        "operationId": "updateAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ADMINS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                },
                "example": {
                  "id": 669,
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "johndoe@example.com",
                  "type": {},
                  "active": true,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Row not found",
                    "name": "Exception",
                    "status": 404
                  }
                },
                "example": {
                  "message": "Row not found",
                  "name": "Exception",
                  "status": 404
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "delete": {
        "summary": "Delete admins (destroy)",
        "description": "Deletes an admin\n\n _app/controllers/admins_controller.ts_ - **destroy**",
        "operationId": "deleteAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ADMINS"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events": {
      "get": {
        "summary": "Get a list of event (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/events_controller.ts_ - **index**",
        "operationId": "getEvents",
        "parameters": [],
        "tags": ["EVENT"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                },
                "example": [
                  {
                    "id": 772,
                    "organizerId": 617,
                    "name": "John Doe",
                    "description": "Lorem ipsum dolor sit amet",
                    "slug": "Lorem Ipsum",
                    "startDate": "2021-03-23T16:13:08.489+01:00",
                    "endDate": "2021-03-23T16:13:08.489+01:00",
                    "firstFormId": 213,
                    "lat": 41.705,
                    "long": -87.475,
                    "primaryColor": "Lorem Ipsum",
                    "organizer": "Lorem Ipsum",
                    "participantsCount": 674,
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Returns **201** (Created) as **application/json**\n\n _app/controllers/events_controller.ts_ - **store**",
        "operationId": "createEvent",
        "parameters": [],
        "tags": ["EVENT"],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": 772,
                  "organizerId": 617,
                  "name": "John Doe",
                  "description": "Lorem ipsum dolor sit amet",
                  "slug": "Lorem Ipsum",
                  "startDate": "2021-03-23T16:13:08.489+01:00",
                  "endDate": "2021-03-23T16:13:08.489+01:00",
                  "firstFormId": 213,
                  "lat": 41.705,
                  "long": -87.475,
                  "primaryColor": "Lorem Ipsum",
                  "organizer": "Lorem Ipsum",
                  "participantsCount": 674,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "Invalid input data"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "content": {
              "text/plain": {
                "example": "Unauthorized access"
              }
            },
            "description": "Returns **401** (Unauthorized) as **text/plain**"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "422": {
            "content": {
              "text/plain": {
                "example": "Validation failed"
              }
            },
            "description": "Returns **422** (Unprocessable Entity) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEventValidator"
              },
              "example": {
                "name": "Lorem Ipsum",
                "description": "Lorem Ipsum",
                "organizer": "Lorem Ipsum",
                "slug": "Lorem Ipsum",
                "startDate": 589,
                "endDate": 82,
                "firstFormId": 792,
                "lat": 478,
                "long": 339,
                "primaryColor": "Lorem Ipsum",
                "participantsCount": 418
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "summary": "Get a single instance of event (show)",
        "description": "Shows one event with logged user permission\n\n _app/controllers/events_controller.ts_ - **show**",
        "operationId": "showEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EVENT"],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": 772,
                  "organizerId": 617,
                  "name": "John Doe",
                  "description": "Lorem ipsum dolor sit amet",
                  "slug": "Lorem Ipsum",
                  "startDate": "2021-03-23T16:13:08.489+01:00",
                  "endDate": "2021-03-23T16:13:08.489+01:00",
                  "firstFormId": 213,
                  "lat": 41.705,
                  "long": -87.475,
                  "primaryColor": "Lorem Ipsum",
                  "organizer": "Lorem Ipsum",
                  "participantsCount": 674,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00",
                  "permissions": [
                    {
                      "id": 377,
                      "action": "Lorem Ipsum",
                      "subject": "Lorem Ipsum"
                    }
                  ]
                }
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "401": {
            "content": {
              "text/plain": {
                "example": "Unauthorized access"
              }
            },
            "description": "Returns **401** (Unauthorized) as **text/plain**"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update event (update)",
        "description": "Updates an existing event if user has permission. Date should be in format 2025-01-05 12:00:00\n\n _app/controllers/events_controller.ts_ - **update**",
        "operationId": "updateEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Event identifier",
            "schema": {
              "example": "",
              "type": "number"
            },
            "required": true
          }
        ],
        "tags": ["EVENT"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": 772,
                  "organizerId": 617,
                  "name": "John Doe",
                  "description": "Lorem ipsum dolor sit amet",
                  "slug": "Lorem Ipsum",
                  "startDate": "2021-03-23T16:13:08.489+01:00",
                  "endDate": "2021-03-23T16:13:08.489+01:00",
                  "firstFormId": 213,
                  "lat": 41.705,
                  "long": -87.475,
                  "primaryColor": "Lorem Ipsum",
                  "organizer": "Lorem Ipsum",
                  "participantsCount": 674,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "Invalid input data"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "content": {
              "text/plain": {
                "example": "Not authorized to update this event"
              }
            },
            "description": "Returns **403** (Forbidden) as **text/plain**"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "Event not found"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          },
          "422": {
            "content": {
              "text/plain": {
                "example": "Validation failed"
              }
            },
            "description": "Returns **422** (Unprocessable Entity) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateEventValidator"
              },
              "example": {
                "name": "Lorem Ipsum",
                "description": "Lorem Ipsum",
                "slug": "Lorem Ipsum",
                "startDate": 430,
                "endDate": 328,
                "lat": 712,
                "long": 3,
                "primaryColor": "Lorem Ipsum",
                "participantsCount": 623,
                "organizer": "Lorem Ipsum"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete event (destroy)",
        "description": "Deletes an event if user has permission\n\n _app/controllers/events_controller.ts_ - **destroy**",
        "operationId": "deleteEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Event identifier",
            "schema": {
              "example": "",
              "type": "number"
            },
            "required": true
          }
        ],
        "tags": ["EVENT"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "content": {
              "text/plain": {
                "example": "You don't have permissions to this actions"
              }
            },
            "description": "Returns **401** (Unauthorized) as **text/plain**"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "Event not found"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/permissions": {
      "get": {
        "summary": "Get a list of permissions (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/permissions_controller.ts_ - **index**",
        "operationId": "getPermissions",
        "parameters": [],
        "tags": ["PERMISSIONS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                },
                "example": [
                  {
                    "id": 377,
                    "action": "Lorem Ipsum",
                    "subject": "Lorem Ipsum"
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Creates a permission\n\n _app/controllers/permissions_controller.ts_ - **store**",
        "operationId": "createPermission",
        "parameters": [],
        "tags": ["PERMISSIONS"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createPermissionValidator"
              },
              "example": {
                "action": "Lorem Ipsum",
                "subject": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/api/v1/permissions/{id}": {
      "get": {
        "summary": "Get a single instance of permissions (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/permissions_controller.ts_ - **show**",
        "operationId": "getPermission",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PERMISSIONS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "example": {
                  "id": 377,
                  "action": "Lorem Ipsum",
                  "subject": "Lorem Ipsum"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "{ message: \"Row not found\", \"name\": \"Exception\", status: 404},"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update permissions (update)",
        "description": "Updates permission\n\n _app/controllers/permissions_controller.ts_ - **update**",
        "operationId": "updateAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PERMISSIONS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "example": {
                  "id": 377,
                  "action": "Lorem Ipsum",
                  "subject": "Lorem Ipsum"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Row not found",
                    "name": "Exception",
                    "status": 404
                  }
                },
                "example": {
                  "message": "Row not found",
                  "name": "Exception",
                  "status": 404
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePermissionValidator"
              },
              "example": {
                "action": "Lorem Ipsum",
                "subject": "Lorem Ipsum"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete permissions (destroy)",
        "description": "Deletes a permission\n\n _app/controllers/permissions_controller.ts_ - **destroy**",
        "operationId": "deletePermission",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PERMISSIONS"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events/{eventId}/blocks": {
      "get": {
        "summary": "Get a list of v1 (index)",
        "description": "\n\n _app/controllers/blocks_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["V1"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "\n\n _app/controllers/blocks_controller.ts_ - **store**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["V1"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        }
      }
    },
    "/api/v1/events/{eventId}/blocks/{id}": {
      "get": {
        "summary": "Get a single instance of v1 (show)",
        "description": "\n\n _app/controllers/blocks_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["V1"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update v1 (update)",
        "description": "\n\n _app/controllers/blocks_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["V1"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        }
      },
      "delete": {
        "summary": "Delete v1 (destroy)",
        "description": "\n\n _app/controllers/blocks_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["V1"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events/{eventId}/emails": {
      "get": {
        "summary": "Get a list of emails (index)",
        "description": "Returns **200** (OK) as **text/plain**\n\n _app/controllers/emails_controller.ts_ - **index**",
        "operationId": "listEmails",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EMAILS"],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "[{\\\"email\": {\"id\": 1, \"eventId\": 1, \"name\": \"Welcome Email\", \"content\": \"Hello name, welcome to the event!\", \"trigger\": \"participant_registered\", \"triggerValue\": null, \"createdAt\": \"2025-02-19T10:58:37.602+00:00\", \"updatedAt\": \"2025-02-19T10:58:37.602+00:00\"}, \"pending\": 0, \"sent\": 0, \"failed\": 0}]"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Returns **201** (Created) as **application/json**\n\n _app/controllers/emails_controller.ts_ - **store**",
        "operationId": "createEmail",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EMAILS"],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": 1,
                    "name": "Email Name",
                    "content": "Email Content",
                    "trigger": "participant_registered"
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Email Name",
                  "content": "Email Content",
                  "trigger": "participant_registered"
                }
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Failed to create email"
                  }
                },
                "example": {
                  "message": "Failed to create email"
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailsStoreValidator"
              },
              "example": {
                "eventId": 738,
                "name": "Lorem Ipsum",
                "content": "Lorem Ipsum",
                "trigger": 781,
                "triggerValue": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/emails/{id}": {
      "get": {
        "summary": "Get a single instance of emails (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/emails_controller.ts_ - **show**",
        "operationId": "getEmail",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EMAILS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": 1,
                    "name": "Email Name",
                    "content": "Email Content",
                    "trigger": "participant_registered"
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Email Name",
                  "content": "Email Content",
                  "trigger": "participant_registered"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Email not found"
                  }
                },
                "example": {
                  "message": "Email not found"
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update emails (update)",
        "description": "Update an existing email associated with a specific event and return the updated email.\n\n _app/controllers/emails_controller.ts_ - **update**",
        "operationId": "updateEmail",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EMAILS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": 1,
                    "name": "Updated Name",
                    "content": "Updated Content",
                    "trigger": "form_filled"
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Updated Name",
                  "content": "Updated Content",
                  "trigger": "form_filled"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailsUpdateValidator"
              },
              "example": {
                "eventId": 938,
                "name": "Lorem Ipsum",
                "content": "Lorem Ipsum",
                "trigger": 992,
                "triggerValue": "Lorem Ipsum"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete emails (destroy)",
        "description": "Remove an email associated with a specific event.\n\n _app/controllers/emails_controller.ts_ - **destroy**",
        "operationId": "deleteEmail",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["EMAILS"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events/{eventId}/forms": {
      "get": {
        "summary": "Get a list of forms (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/forms_controller.ts_ - **index**",
        "operationId": "getForms",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["FORMS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                },
                "example": [
                  {
                    "id": 853,
                    "eventId": 399,
                    "isOpen": true,
                    "description": "Lorem ipsum dolor sit amet",
                    "name": "John Doe",
                    "slug": "Lorem Ipsum",
                    "startDate": "2021-03-23T16:13:08.489+01:00",
                    "endDate": "2021-03-23T16:13:08.489+01:00",
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Creates a form for the specified event\n\n _app/controllers/forms_controller.ts_ - **store**",
        "operationId": "createForm",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["FORMS"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createFormValidator"
              },
              "example": {
                "isOpen": true,
                "description": "Lorem Ipsum",
                "name": "Lorem Ipsum",
                "startDate": 259,
                "endDate": 795,
                "attributeIds": [731]
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/forms/{id}": {
      "get": {
        "summary": "Get a single instance of forms (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/forms_controller.ts_ - **show**",
        "operationId": "getForm",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["FORMS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                },
                "example": {
                  "id": 853,
                  "eventId": 399,
                  "isOpen": true,
                  "description": "Lorem ipsum dolor sit amet",
                  "name": "John Doe",
                  "slug": "Lorem Ipsum",
                  "startDate": "2021-03-23T16:13:08.489+01:00",
                  "endDate": "2021-03-23T16:13:08.489+01:00",
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "{ message: \"Row not found\", \"name\": \"Exception\", status: 404},"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update forms (update)",
        "description": "Updates form details\n\n _app/controllers/forms_controller.ts_ - **update**",
        "operationId": "updateForm",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["FORMS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                },
                "example": {
                  "id": 853,
                  "eventId": 399,
                  "isOpen": true,
                  "description": "Lorem ipsum dolor sit amet",
                  "name": "John Doe",
                  "slug": "Lorem Ipsum",
                  "startDate": "2021-03-23T16:13:08.489+01:00",
                  "endDate": "2021-03-23T16:13:08.489+01:00",
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Row not found",
                    "name": "Exception",
                    "status": 404
                  }
                },
                "example": {
                  "message": "Row not found",
                  "name": "Exception",
                  "status": 404
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateFormValidator"
              },
              "example": {
                "isOpen": true,
                "description": "Lorem Ipsum",
                "name": "Lorem Ipsum",
                "startDate": 782,
                "endDate": 545,
                "attributeIds": [207]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete forms (destroy)",
        "description": "Deletes a form\n\n _app/controllers/forms_controller.ts_ - **destroy**",
        "operationId": "deleteForm",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["FORMS"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Row not found",
                    "name": "Exception",
                    "status": 404
                  }
                },
                "example": {
                  "message": "Row not found",
                  "name": "Exception",
                  "status": 404
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events/{eventId}/organizers": {
      "get": {
        "summary": "Get a list of organizers (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/organizers_controller.ts_ - **index**",
        "operationId": "getEventOrganizers",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ORGANIZERS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                },
                "example": [
                  {
                    "id": 669,
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@example.com",
                    "type": {},
                    "active": true,
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": " (store)",
        "description": "Adds an admin as an event organizer\n\n _app/controllers/organizers_controller.ts_ - **store**",
        "operationId": "addEventOrganizer",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ORGANIZERS"],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addOrganizerValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "permissionsIds": [750],
                "firstName": "Lorem Ipsum",
                "lastName": "Lorem Ipsum",
                "password": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/organizers/{id}": {
      "get": {
        "summary": "Get a single instance of organizers (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/organizers_controller.ts_ - **show**",
        "operationId": "getEventOrganizer",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ORGANIZERS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                },
                "example": {
                  "id": 669,
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "johndoe@example.com",
                  "type": {},
                  "active": true,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "text/plain": {
                "example": "{ error: `Organizer with id {organizerId} does not exist` },"
              }
            },
            "description": "Returns **404** (Not Found) as **text/plain**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update organizers (update)",
        "description": "Changes organizer's permissions to the ones specified in the request body\n\n _app/controllers/organizers_controller.ts_ - **update**",
        "operationId": "updateOrganizerPermissions",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ORGANIZERS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                },
                "example": {
                  "id": 669,
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "johndoe@example.com",
                  "type": {},
                  "active": true,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Row not found",
                    "name": "Exception",
                    "status": 404
                  }
                },
                "example": {
                  "message": "Row not found",
                  "name": "Exception",
                  "status": 404
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateOrganizerPermissionsValidator"
              },
              "example": {
                "permissionsIds": [949]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete organizers (destroy)",
        "description": "Removes organizer\n\n _app/controllers/organizers_controller.ts_ - **destroy**",
        "operationId": "removeOrganizer",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["ORGANIZERS"],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            },
            "description": "Returns **204** (No Content) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/events/{eventId}/participants": {
      "get": {
        "summary": "Get all participants (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/participants_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PARTICIPANTS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "example": [
                  {
                    "id": 32,
                    "email": "test@test.pl",
                    "firstName": "name",
                    "lastName": "last name",
                    "slug": "9081d217-9e13-4642-b7f0-2b8f8f409dfb",
                    "createdAt": "2025-02-19 13:56:10",
                    "updatedAt": "2025-02-19 13:56:10",
                    "attributes": [
                      {
                        "id": 25,
                        "name": "Sample Attribute",
                        "value": "sample value",
                        "slug": "sample-slug"
                      }
                    ]
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "post": {
        "summary": "Create a new participant (store)",
        "description": "Returns **201** (Created) as **application/json**\n\n _app/controllers/participants_controller.ts_ - **store**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PARTICIPANTS"],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                },
                "example": {
                  "id": 852,
                  "email": "johndoe@example.com",
                  "eventId": 150,
                  "firstName": "John",
                  "lastName": "Doe",
                  "slug": "Lorem Ipsum",
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/participantsStoreValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "eventId": 793,
                "firstName": "Lorem Ipsum",
                "lastName": "Lorem Ipsum",
                "participantAttributes": [
                  {
                    "attributeId": 314,
                    "value": "Lorem Ipsum"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/participants/{id}": {
      "get": {
        "summary": "Get a participant (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/participants_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PARTICIPANTS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": 1,
                    "email": "john.doe@example.com",
                    "firstName": "John",
                    "lastName": "Doe",
                    "slug": "some-unique-slug",
                    "createdAt": "2025-02-18T00:56:06.115+01:00",
                    "updatedAt": "2025-02-18T00:56:06.115+01:00",
                    "emails": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "id": 1,
                            "name": "Welcome Email",
                            "content": "Welcome to our event!",
                            "participantEmails": {
                              "type": "object",
                              "properties": {
                                "status": "sent",
                                "sendBy": "admin",
                                "sendAt": "2025-02-19T14:43:12.000+01:00"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "email": "john.doe@example.com",
                  "firstName": "John",
                  "lastName": "Doe",
                  "slug": "some-unique-slug",
                  "createdAt": "2025-02-18T00:56:06.115+01:00",
                  "updatedAt": "2025-02-18T00:56:06.115+01:00",
                  "emails": [
                    {
                      "id": 1,
                      "name": "Welcome Email",
                      "content": "Welcome to our event!",
                      "participantEmails": {
                        "status": "sent",
                        "sendBy": "admin",
                        "sendAt": "2025-02-19T14:43:12.000+01:00"
                      }
                    }
                  ]
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Participant not found."
                  }
                },
                "example": {
                  "message": "Participant not found."
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      },
      "put": {
        "summary": "Update a participant (update)",
        "description": "Update a participant for specific event with optional attributes\n\n _app/controllers/participants_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PARTICIPANTS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                },
                "example": {
                  "id": 852,
                  "email": "johndoe@example.com",
                  "eventId": 150,
                  "firstName": "John",
                  "lastName": "Doe",
                  "slug": "Lorem Ipsum",
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/participantsUpdateValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "eventId": 183,
                "firstName": "Lorem Ipsum",
                "lastName": "Lorem Ipsum",
                "participantAttributes": [
                  {
                    "id": 545,
                    "value": "Lorem Ipsum"
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a participant (destroy)",
        "description": "Delete a participant for specific event\n\n _app/controllers/participants_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["PARTICIPANTS"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Participant successfully deleted."
                  }
                },
                "example": {
                  "message": "Participant successfully deleted."
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Participant not found in this event."
                  }
                },
                "example": {
                  "message": "Participant not found in this event."
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": " (login)",
        "description": "Enables login. Default method is token authorization. Support rememberMe functionality. If rememberMe is set to true then token expires in 30 days, otherwise in 24h.\n\n _app/controllers/auth_controller.ts_ - **login**",
        "operationId": "loginAdmin",
        "parameters": [],
        "tags": ["AUTH"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "admin": {
                      "$ref": "#/components/schemas/Admin"
                    },
                    "token": "oat_Mw.YUxCZHV2Y0ZjNzJKcU5LejV0Q241V0JDUm83QlspsRENDZU9qT"
                  }
                },
                "example": {
                  "admin": {
                    "id": 669,
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@example.com",
                    "type": {},
                    "active": true,
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  },
                  "token": "oat_Mw.YUxCZHV2Y0ZjNzJKcU5LejV0Q241V0JDUm83QlspsRENDZU9qT"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "message": "Invalid user credentials"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Invalid user credentials"
                    }
                  ]
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "message": "Password field is required",
                            "field": "password"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Password field is required",
                      "field": "password"
                    }
                  ]
                }
              }
            },
            "description": "Returns **422** (Unprocessable Entity) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "password": "Lorem Ipsum",
                "rememberMe": true
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "summary": " (register)",
        "description": "Enables registration of admin. After registration admin is logged in and bearer token is generated.\n\n _app/controllers/auth_controller.ts_ - **register**",
        "operationId": "registerAdmin",
        "parameters": [],
        "tags": ["AUTH"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "admin": {
                      "$ref": "#/components/schemas/Admin"
                    },
                    "token": "oat_Mw.YUxCZHV2Y0ZjNzJKcU5LejV0Q241V0JDUm83QlspsRENDZU9qT"
                  }
                },
                "example": {
                  "admin": {
                    "id": 669,
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@example.com",
                    "type": {},
                    "active": true,
                    "createdAt": "2021-03-23T16:13:08.489+01:00",
                    "updatedAt": "2021-03-23T16:13:08.489+01:00"
                  },
                  "token": "oat_Mw.YUxCZHV2Y0ZjNzJKcU5LejV0Q241V0JDUm83QlspsRENDZU9qT"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "message": "First name field is required",
                            "field": "firstName"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "First name field is required",
                      "field": "firstName"
                    }
                  ]
                }
              }
            },
            "description": "Returns **422** (Unprocessable Entity) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerAdminValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "password": "Lorem Ipsum",
                "firstName": "Lorem Ipsum",
                "lastName": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "summary": " (me)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/auth_controller.ts_ - **me**",
        "operationId": "authenticatedAdmin",
        "parameters": [],
        "tags": ["AUTH"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                },
                "example": {
                  "id": 669,
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "johndoe@example.com",
                  "type": {},
                  "active": true,
                  "createdAt": "2021-03-23T16:13:08.489+01:00",
                  "updatedAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "message": "Unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Unauthorized access"
                    }
                  ]
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": ["access"]
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "V1",
      "description": "Everything related to V1"
    },
    {
      "name": "ADMINS",
      "description": "Everything related to ADMINS"
    },
    {
      "name": "ADMINS",
      "description": "Everything related to ADMINS"
    },
    {
      "name": "ADMINS",
      "description": "Everything related to ADMINS"
    },
    {
      "name": "ADMINS",
      "description": "Everything related to ADMINS"
    },
    {
      "name": "ADMINS",
      "description": "Everything related to ADMINS"
    },
    {
      "name": "EVENT",
      "description": "Everything related to EVENT"
    },
    {
      "name": "EVENT",
      "description": "Everything related to EVENT"
    },
    {
      "name": "EVENT",
      "description": "Everything related to EVENT"
    },
    {
      "name": "EVENT",
      "description": "Everything related to EVENT"
    },
    {
      "name": "EVENT",
      "description": "Everything related to EVENT"
    },
    {
      "name": "PERMISSIONS",
      "description": "Everything related to PERMISSIONS"
    },
    {
      "name": "PERMISSIONS",
      "description": "Everything related to PERMISSIONS"
    },
    {
      "name": "PERMISSIONS",
      "description": "Everything related to PERMISSIONS"
    },
    {
      "name": "PERMISSIONS",
      "description": "Everything related to PERMISSIONS"
    },
    {
      "name": "PERMISSIONS",
      "description": "Everything related to PERMISSIONS"
    },
    {
      "name": "EMAILS",
      "description": "Everything related to EMAILS"
    },
    {
      "name": "EMAILS",
      "description": "Everything related to EMAILS"
    },
    {
      "name": "EMAILS",
      "description": "Everything related to EMAILS"
    },
    {
      "name": "EMAILS",
      "description": "Everything related to EMAILS"
    },
    {
      "name": "EMAILS",
      "description": "Everything related to EMAILS"
    },
    {
      "name": "FORMS",
      "description": "Everything related to FORMS"
    },
    {
      "name": "FORMS",
      "description": "Everything related to FORMS"
    },
    {
      "name": "FORMS",
      "description": "Everything related to FORMS"
    },
    {
      "name": "FORMS",
      "description": "Everything related to FORMS"
    },
    {
      "name": "FORMS",
      "description": "Everything related to FORMS"
    },
    {
      "name": "ORGANIZERS",
      "description": "Everything related to ORGANIZERS"
    },
    {
      "name": "ORGANIZERS",
      "description": "Everything related to ORGANIZERS"
    },
    {
      "name": "ORGANIZERS",
      "description": "Everything related to ORGANIZERS"
    },
    {
      "name": "ORGANIZERS",
      "description": "Everything related to ORGANIZERS"
    },
    {
      "name": "ORGANIZERS",
      "description": "Everything related to ORGANIZERS"
    },
    {
      "name": "PARTICIPANTS",
      "description": "Everything related to PARTICIPANTS"
    },
    {
      "name": "PARTICIPANTS",
      "description": "Everything related to PARTICIPANTS"
    },
    {
      "name": "PARTICIPANTS",
      "description": "Everything related to PARTICIPANTS"
    },
    {
      "name": "PARTICIPANTS",
      "description": "Everything related to PARTICIPANTS"
    },
    {
      "name": "PARTICIPANTS",
      "description": "Everything related to PARTICIPANTS"
    },
    {
      "name": "AUTH",
      "description": "Everything related to AUTH"
    },
    {
      "name": "AUTH",
      "description": "Everything related to AUTH"
    },
    {
      "name": "AUTH",
      "description": "Everything related to AUTH"
    }
  ]
}
